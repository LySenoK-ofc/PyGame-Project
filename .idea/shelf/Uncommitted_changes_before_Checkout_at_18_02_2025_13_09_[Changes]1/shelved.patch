Index: all_animations.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from load_animation_func import load_anim\r\n\r\nANIMATIONS = {\r\n    'ARCHER': load_anim(\"assets/animations/Troops/archer/Archer.png\", 'troops', 'archer'),\r\n    'KNIGHT': load_anim(\"assets/animations/Troops/knight/Knight.png\", 'troops', 'knight'),\r\n    'LANCER': load_anim(\"assets/animations/Troops/lancer/Lancer.png\", 'troops', 'lancer', scale=(230, 230)),\r\n    'WIZARD': load_anim(\"assets/animations/Troops/wizard/Wizard.png\", 'troops', 'wizard'),\r\n    'PRIEST': load_anim(\"assets/animations/Troops/priest/Priest.png\", 'troops', 'priest'),\r\n    'SWORDSMAN': load_anim(\"assets/animations/Troops/swordsman/Swordsman.png\", 'troops', 'swordsman'),\r\n    'KNIGHT_TEMPLAR': load_anim(\"assets/animations/Troops/knight_templar/Knight Templar.png\", 'troops', 'knight_templar'),\r\n    'ARMORED_AXEMAN': load_anim(\"assets/animations/Troops/armored_axeman/Armored Axeman.png\", 'troops', 'armored_axeman'),\r\n    'ARROW01': load_anim(\"assets/animations/Troops/arrows/Arrow01(100x100).png\", 'arrows', 'arrow01', scale=(230, 230)),\r\n    'ORC': load_anim(\"assets/animations/Mobs/orc/Orc.png\", 'mobs', 'orc', True),\r\n    'ELITE_ORC': load_anim(\"assets/animations/Mobs/elite_orc/Elite Orc.png\", 'mobs', 'elite_orc', True),\r\n    'ARMORED_ORC': load_anim(\"assets/animations/Mobs/armored_orc/Armored Orc.png\", 'mobs', 'armored_orc', True),\r\n    'RIDER_ORC': load_anim(\"assets/animations/Mobs/rider_orc/Orc rider.png\", 'mobs', 'rider_orc', True),\r\n    'ARMORED_SCELETON': load_anim(\"assets/animations/Mobs/armored_skeleton/Armored Skeleton.png\", 'mobs', 'armored_skeleton', True),\r\n    'GREATSWORD_SKELETON': load_anim(\"assets/animations/Mobs/greatsword_skeleton/Greatsword Skeleton.png\", 'mobs', 'greatsword_skeleton', True),\r\n    'SKELETON': load_anim(\"assets/animations/Mobs/skeleton/Skeleton.png\", 'mobs', 'skeleton', True),\r\n    'SLIME': load_anim(\"assets/animations/Mobs/slime/Slime.png\", 'mobs', 'slime', True),\r\n    'SMALL_SLIME': load_anim(\"assets/animations/Mobs/slime/Slime.png\", 'mobs', 'slime', True, scale=(220, 220)),\r\n    'WEREBEAR': load_anim(\"assets/animations/Mobs/werebear/Werebear.png\", 'mobs', 'werebear', True),\r\n    'WEREWOLF': load_anim(\"assets/animations/Mobs/werewolf/Werewolf.png\", 'mobs', 'werewolf', True),\r\n    'DIALOG_KNIGHT': load_anim(\"assets/animations/Troops/knight/Knight.png\", 'troops', 'knight', scale=(1700, 1700))\r\n    'CAMP_FIRE': load_anim(\"assets/animations/Animated_objects/camp_fire.png\", 'anim_object', 'camp_fire', scale=(70,70)),\r\n    'FLAG': load_anim(\"assets/animations/Animated_objects/flag.png\", 'anim_object', 'flag', reverse=True,scale=(64,128)),\r\n    'LEAVES': load_anim(\"assets/animations/Animated_objects/leaves.png\", 'anim_object', 'leaves', scale=(150,150))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/all_animations.py b/all_animations.py
--- a/all_animations.py	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/all_animations.py	(date 1739872252179)
@@ -21,7 +21,7 @@
     'SMALL_SLIME': load_anim("assets/animations/Mobs/slime/Slime.png", 'mobs', 'slime', True, scale=(220, 220)),
     'WEREBEAR': load_anim("assets/animations/Mobs/werebear/Werebear.png", 'mobs', 'werebear', True),
     'WEREWOLF': load_anim("assets/animations/Mobs/werewolf/Werewolf.png", 'mobs', 'werewolf', True),
-    'DIALOG_KNIGHT': load_anim("assets/animations/Troops/knight/Knight.png", 'troops', 'knight', scale=(1700, 1700))
+    'DIALOG_KNIGHT': load_anim("assets/animations/Troops/knight/Knight.png", 'troops', 'knight', scale=(1700, 1700)),
     'CAMP_FIRE': load_anim("assets/animations/Animated_objects/camp_fire.png", 'anim_object', 'camp_fire', scale=(70,70)),
     'FLAG': load_anim("assets/animations/Animated_objects/flag.png", 'anim_object', 'flag', reverse=True,scale=(64,128)),
     'LEAVES': load_anim("assets/animations/Animated_objects/leaves.png", 'anim_object', 'leaves', scale=(150,150))
Index: screens.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\n\r\nimport pygame.sprite\r\nfrom load_image_func import load_image\r\nfrom sound_tests import play_background_music\r\nfrom sprite_groups import update_group\r\nfrom Map_constructor import MapTile, AnimatedMapObject\r\nfrom shop import Shop\r\n\r\nfrom Units import *\r\nfrom Mobs import *\r\n\r\nfrom constant import LEFT, TOP, FPS, WIDTH, HEIGHT, reset_state\r\nfrom Map_constructor import MapConstructor, generate_level, load_level\r\nimport pygame.freetype\r\nfrom Board_class import Board\r\nfrom sale_func import sale_unit\r\nfrom show_info import show_unit_info\r\nfrom Waves_spawner import WaveManager\r\n\r\npygame.init()\r\n\r\nsize = WIDTH, HEIGHT\r\nscreen = pygame.display.set_mode(size)\r\n\r\nclock = pygame.time.Clock()\r\n\r\nfont = pygame.font.Font('assets/pi-sheng.regular.otf', 64)\r\nfont2 = pygame.font.Font('assets/data/Adbnorm.ttf', 32)\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):\r\n    button_images = {'settings': 'assets/buttons/settings_btn.png',\r\n                     'pause': 'assets/buttons/pause_btn.png',\r\n                     'return': 'assets/buttons/return_btn.png',\r\n                     'replay': 'assets/buttons/replay_btn.png',\r\n                     'continue': 'assets/buttons/continue_btn.png',\r\n                     'sketch': 'assets/buttons/sketch_btn.png',\r\n                     'entity_view': 'assets/buttons/entity_view_btn.png'}\r\n\r\n    def __init__(self, x, y, type_btn, command, group=groups['buttons']):\r\n        super().__init__(group)\r\n        self.image = load_image(self.button_images[type_btn])\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = x\r\n        self.rect.y = y\r\n        self.command = command\r\n\r\n    def update(self, *args, **kwargs):\r\n        if args and args[0].type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(args[0].pos):\r\n            update_group()\r\n            Sketch_button.texts.clear()\r\n            play_sound(sounds['button_click'])\r\n            if not pygame.mixer.music.get_busy():\r\n                play_background_music('assets/sounds/background_sounds/lobby/lobby_sound.mp3')\r\n\r\n            if self.command == 'open_pick_level_screen':\r\n                pick_level_screen()\r\n                rulers_screen()\r\n                update_group()  # Временно\r\n                game_loop()  # Временно\r\n            if self.command == 'open_main_lobby':\r\n                main_lobby()\r\n            if self.command == 'quit':\r\n                terminate()\r\n            if self.command == 'open_dictionary_screen':\r\n                dictionary_screen(0)\r\n            if self.command == 'open_options_screen':\r\n                options_screen()\r\n            if self.command == 'open_characters_page':\r\n                dictionary_screen(0, entity='Knight')\r\n            if self.command == 'open_mobs_page':\r\n                dictionary_screen(1, entity='Orc')\r\n            if self.command == 'replay':\r\n                game_loop()\r\n            if self.command == 'next_level':\r\n                game_loop()\r\n\r\n\r\nclass Sketch_button(Button):\r\n    texts = []\r\n\r\n    def __init__(self, x, y, command, text=None, group=groups['buttons']):\r\n        super().__init__(x, y, 'sketch', command, group)\r\n        self.texts.append([font.render(text, True, 'black'), (x + 30, y + 15)])\r\n\r\n\r\nclass Entity_view_button(Button):\r\n    characters_view = pygame.sprite.Group()\r\n    mobs_view = pygame.sprite.Group()\r\n\r\n    def __init__(self, x, y, entity=None, entity_type=None, group=groups['buttons']):\r\n        super().__init__(x, y, 'entity_view', None, group)\r\n        self.entity = entity\r\n        self.entity_type = entity_type\r\n        if self.entity_type == 'Unit':\r\n            self.characters_view.add(Shop(None, (x + 50, y + 50), ANIMATIONS[entity.upper()], None))\r\n        else:\r\n            self.mobs_view.add(Shop(None, (x + 57, y + 50), ANIMATIONS[entity.upper()], None))\r\n\r\n    def update(self, *args, **kwargs):\r\n        if args and args[0].type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(args[0].pos):\r\n            groups['buttons'].empty()\r\n            Sketch_button.texts.clear()\r\n            play_sound(sounds['button_click'], 0.2)\r\n            if self.entity_type == 'Unit':\r\n                dictionary_screen(0, self.entity)\r\n            else:\r\n                dictionary_screen(1, self.entity)\r\n\r\n\r\nclass Door_lock(pygame.sprite.Sprite):\r\n    def __init__(self, x, y):\r\n        super().__init__(groups['level_doors'])\r\n        self.image = load_image('assets/doors/lock.png')\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = x\r\n        self.rect.y = y\r\n\r\n\r\nclass Level_door(pygame.sprite.Sprite):\r\n    def __init__(self, x, y, lock=True):\r\n        super().__init__(groups['level_doors'])\r\n        self.image = load_image('assets/doors/close_door.png')\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = x\r\n        self.rect.y = y\r\n        self.click = 0\r\n        if lock:\r\n            self.lock = Door_lock(x + 110, y + 150)\r\n        else:\r\n            self.lock = None\r\n\r\n    def update(self, *args, **kwargs):\r\n        if args and args[0].type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(args[0].pos):\r\n            if self.lock:\r\n                play_sound(sounds['door_close'], 1)\r\n            else:\r\n                self.image = load_image('assets/doors/open_door.png')\r\n                self.click += 1\r\n                if self.click == 1:\r\n                    play_sound(sounds['open_door'], 1)\r\n                if self.check():\r\n                    groups['buttons'].empty()\r\n\r\n    def check(self):\r\n        if self.click >= 2:\r\n            return True\r\n        return False\r\n\r\n\r\ndef main_lobby():\r\n    background = load_image('assets/backgrounds/main_background.png')\r\n    pygame.display.set_icon(load_image('assets/icon.png'))\r\n\r\n    Sketch_button(900, 300, 'open_pick_level_screen', 'Continue')\r\n    Sketch_button(900, 425, 'open_dictionary_screen', 'Dictionary')\r\n    Sketch_button(900, 550, 'open_options_screen', 'Options')\r\n    Sketch_button(900, 675, 'quit', 'Quit')\r\n\r\n    pygame.display.set_caption('Главное Лобби')\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                groups['buttons'].update(event)\r\n\r\n        screen.blit(background, (0, 0))\r\n        groups['buttons'].draw(screen)\r\n        for txt in Sketch_button.texts:\r\n            screen.blit(txt[0], txt[1])\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef dictionary_screen(page=0, entity='Knight'):\r\n    pygame.display.set_caption('Бестиарий')\r\n    background = load_image('assets/backgrounds/levels_background.png')\r\n\r\n    Entity_view_button.characters_view.empty()\r\n    Entity_view_button.mobs_view.empty()\r\n\r\n    Button(1300, 650, 'return', 'open_main_lobby')\r\n    Sketch_button(300, 60, 'open_characters_page', 'Characters')\r\n    Sketch_button(800, 60, 'open_mobs_page', 'Mobs')\r\n\r\n    Entity_view_button(600, 200, 'Knight', 'Unit', groups['characters_page'])\r\n    Entity_view_button(600, 320, 'Archer', 'Unit', groups['characters_page'])\r\n    Entity_view_button(600, 440, 'Wizard', 'Unit', groups['characters_page'])\r\n    Entity_view_button(600, 560, 'Armored_Axeman', 'Unit', groups['characters_page'])\r\n    Entity_view_button(740, 200, 'SwordsMan', 'Unit', groups['characters_page'])\r\n    Entity_view_button(740, 320, 'Priest', 'Unit', groups['characters_page'])\r\n    Entity_view_button(740, 440, 'Knight_Templar', 'Unit', groups['characters_page'])\r\n    Entity_view_button(740, 560, 'Lancer', 'Unit', groups['characters_page'])\r\n\r\n    Entity_view_button(970, 200, 'Orc', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(970, 320, 'Armored_Orc', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(970, 440, 'Elite_Orc', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(970, 560, 'Skeleton', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1100, 200, 'Armored_Skeleton', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1100, 320, 'Greatsword_Skeleton', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1100, 440, 'Slime', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1100, 560, 'Werewolf', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1230, 200, 'Werebear', 'Mob', groups['mobs_page'])\r\n    Entity_view_button(1230, 320, 'Rider_Orc', 'Mob', groups['mobs_page'])\r\n\r\n    if page:\r\n        groups['characters_page'].empty()\r\n    else:\r\n        groups['mobs_page'].empty()\r\n\r\n    dictionary_field = load_image('assets/other_textures/dictionary_field.png')\r\n    current_entity = pygame.sprite.Group()\r\n    current_entity.add(Shop(None, (375, 450), ANIMATIONS[entity.upper()], None))\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    groups['buttons'].update(event)\r\n                    groups['characters_page'].update(event)\r\n                    groups['mobs_page'].update(event)\r\n\r\n        screen.blit(background, (0, 0))\r\n        groups['buttons'].draw(screen)\r\n\r\n        screen.blit(dictionary_field, (175, 200))\r\n\r\n        if page:\r\n            groups['mobs_page'].draw(screen)\r\n            Entity_view_button.mobs_view.draw(screen)\r\n            pygame.draw.rect(screen, 'black', pygame.Rect(\r\n                590, 200, 370, 470), 0, 35)\r\n        else:\r\n            groups['characters_page'].draw(screen)\r\n            Entity_view_button.characters_view.draw(screen)\r\n            pygame.draw.rect(screen, 'black', pygame.Rect(\r\n                870, 200, 420, 470), 0, 35)\r\n\r\n        for txt in Sketch_button.texts:\r\n            screen.blit(txt[0], txt[1])\r\n\r\n        current_entity.update()\r\n        current_entity.draw(screen)\r\n\r\n        pygame.display.flip()\r\n\r\n\r\ndef options_screen():\r\n    pygame.display.set_caption('Настройки')\r\n\r\n    Button(1300, 650, 'return', 'open_main_lobby')\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    groups['buttons'].update(event)\r\n        screen.fill('black')\r\n        groups['buttons'].draw(screen)\r\n\r\n        pygame.display.flip()\r\n\r\n\r\ndef pick_level_screen():\r\n    background = load_image('assets/backgrounds/levels_background.png')\r\n\r\n    pygame.display.set_caption('Выбор уровня')\r\n\r\n    Level_door(174, 120, False)\r\n    Level_door(606, 120)\r\n    Level_door(1038, 120)\r\n    Level_door(375, 470)\r\n    Level_door(825, 470)\r\n\r\n    text_level1 = font.render('Level 1', True, 'black')\r\n    text_level2 = font.render('Level 2', True, 'black')\r\n    text_level3 = font.render('Level 3', True, 'black')\r\n    text_level4 = font.render('Level 4', True, 'black')\r\n    text_level5 = font.render('Level 5', True, 'black')\r\n\r\n    Button(1200, 500, 'return', 'open_main_lobby')\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    groups['level_doors'].update(event)\r\n                    for door in groups['level_doors']:\r\n                        if type(door) == Level_door:\r\n                            if door.check():\r\n                                return\r\n                    groups['buttons'].update(event)\r\n\r\n        screen.blit(background, (0, 0))\r\n\r\n        groups['level_doors'].draw(screen)\r\n        groups['buttons'].draw(screen)\r\n\r\n        screen.blit(text_level1, (220, 60))\r\n        screen.blit(text_level2, (650, 60))\r\n        screen.blit(text_level3, (1100, 60))\r\n        screen.blit(text_level4, (420, 415))\r\n        screen.blit(text_level5, (870, 415))\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef rulers_screen():\r\n    pygame.display.set_caption('Правила')\r\n    dialog = load_image('assets/other_textures/dialog.png')\r\n    MapTile(groups['map_tiles'], (0, 0), load_image('assets/map_tiles/Tiles/FieldsTile_38.png', scale=(1500, 825)))\r\n    MapTile(groups['map_objects'], (810, 50), load_image('assets/map_tiles/Objects/camp/1.png', scale=(599, 378)))\r\n    MapTile(groups['map_objects'], (310, 150), load_image('assets/map_tiles/Objects/decor/Box1.png', scale=(150, 150)))\r\n    MapTile(groups['map_objects'], (196, 170), load_image('assets/map_tiles/Objects/decor/Box1.png', scale=(150, 150)))\r\n    MapTile(groups['map_objects'], (245, 70), load_image('assets/map_tiles/Objects/decor/Box1.png', scale=(150, 150)))\r\n    MapTile(groups['map_objects'], (340, 360), load_image('assets/map_tiles/Objects/stones/1.png', scale=(66, 48)))\r\n    MapTile(groups['map_objects'], (270, 780), load_image('assets/map_tiles/Objects/stones/2.png', scale=(36, 24)))\r\n    MapTile(groups['map_objects'], (75, 100), load_image('assets/map_tiles/Objects/stones/3.png', scale=(66, 42)))\r\n    MapTile(groups['map_objects'], (670, 165), load_image('assets/map_tiles/Objects/stones/4.png', scale=(78, 48)))\r\n    AnimatedMapObject(groups['animated_map_objects'], (500, 250),\r\n                      ('assets/map_tiles/Animated_Objects/campfire/active_campfire/1.png',\r\n                       'assets/map_tiles/Animated_Objects/campfire/active_campfire/2.png',\r\n                       'assets/map_tiles/Animated_Objects/campfire/active_campfire/3.png',\r\n                       'assets/map_tiles/Animated_Objects/campfire/active_campfire/4.png',\r\n                       'assets/map_tiles/Animated_Objects/campfire/active_campfire/5.png',\r\n                       'assets/map_tiles/Animated_Objects/campfire/active_campfire/6.png',), scale=(250, 250))\r\n\r\n    continue_text = font2.render('Нажмите ПРОБЕЛ, чтобы продолжить', True, 'white')\r\n    rulers_text = (('Приветствую! Ваша задча - защитить этот лагерь',\r\n                    'от монстров, для этого вам было выделено войско.',\r\n                    'Но помните - никто не работает за бесплатно,',\r\n                    'поэтому для усиления боевой мощи вам придется',\r\n                    ' зарабатывать деньги, убивая врагов.'),\r\n                   ('На ваш счет сразу будет начислен стартовый',\r\n                    'капитал, а также на поле битвы будут находиться',\r\n                    '5 всадников, способных спасти вас в критической',\r\n                    'ситуации. Желаю удачи!'),\r\n                   ('<Помощь в управлении>',\r\n                    'Для размещения воина на поле боя, необходимо',\r\n                    'перетащить его из магазина на место, куда вы',\r\n                    'хотите его разместить. При зажатой клавише SHIFT',\r\n                    'вы можете узнать информацию о воине(здровье',\r\n                    'броню и урон, если он находиться на поле боя,'),\r\n                   ('стоимость размещения и продажи - если в магазине).',\r\n                    'ПКМ, чтобы продать воина. Также в игре присут-',\r\n                    'ствует возможность быстрого размещения войска,',\r\n                    'для этого небходимо зажать цифру на ',\r\n                    'клавиатуре и кликнуть по нужной клетке',\r\n                    '(1-Лучник, 2-Рыцарь, 3-Маг, 4-Жрица,',\r\n                    '5-Дровосек, 6-Мастер Меча, 7-Королевский страж)'))\r\n    dialog_page = 0\r\n\r\n    Dialog_Knight()\r\n    play_sound(sounds['mumble'])\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.KEYDOWN:\r\n                keys = pygame.key.get_pressed()\r\n                if keys[pygame.K_SPACE]:\r\n                    if dialog_page + 1 == len(rulers_text):\r\n                        return\r\n                    else:\r\n                        dialog_page += 1\r\n                        if not pygame.mixer.Channel(1).get_busy():\r\n                            pygame.mixer.Channel(1).play(sounds['mumble'])\r\n                if keys[pygame.K_LEFT]:\r\n                    if dialog_page > 0:\r\n                        dialog_page -= 1\r\n\r\n        screen.fill('black')\r\n        groups['map_tiles'].draw(screen)\r\n        groups['map_objects'].draw(screen)\r\n        groups['animated_map_objects'].draw(screen)\r\n        groups['animated_map_objects'].update()\r\n        groups['shop_units'].draw(screen)\r\n        groups['shop_units'].update()\r\n\r\n        screen.blit(dialog, (240, 400))\r\n        screen.blit(continue_text, (385, 20))\r\n        for i in range(len(rulers_text[dialog_page])):\r\n            screen.blit(font2.render(rulers_text[dialog_page][i], True, 'black'), (410, 540 + i * 30))\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef pause_screen():\r\n    def unpause_music():\r\n        pygame.mixer.music.unpause()\r\n        pygame.mixer.unpause()\r\n        pygame.display.set_caption('Игра')\r\n\r\n    pygame.display.set_caption('Пауза')\r\n    pygame.mixer.music.pause()\r\n    pygame.mixer.pause()\r\n    menu = load_image('assets/other_textures/game_menu.png')\r\n    close_btn_coord = ((1110, 115), (1170, 180))\r\n\r\n    Button(420, 275, 'replay', 'replay')\r\n    Button(420, 425, 'return', 'open_pick_level_screen')\r\n\r\n    Sketch_button(550, 280, 'replay', 'Replay')\r\n    Sketch_button(550, 440, 'open_pick_level_screen', 'Back to lobby')\r\n\r\n    pause_text = load_image('assets/other_textures/pause.png')\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.KEYDOWN:\r\n                keys = pygame.key.get_pressed()\r\n                if keys[pygame.K_ESCAPE]:\r\n                    unpause_music()\r\n                    return\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    pos = event.pos\r\n                    if close_btn_coord[0][0] < pos[0] < close_btn_coord[1][0]\\\r\n                            and close_btn_coord[0][1] < pos[1] < close_btn_coord[1][1]:\r\n                        unpause_music()\r\n                        play_sound(sounds['button_click'])\r\n                        return\r\n                    groups['buttons'].update(event)\r\n        groups['all_sprites'].draw(screen)\r\n        screen.blit(menu, (284, 97))\r\n        screen.blit(pause_text, (537, 115))\r\n        groups['buttons'].draw(screen)\r\n        for txt in Sketch_button.texts:\r\n            screen.blit(txt[0], txt[1])\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef win_screen(lvl=None):\r\n    pygame.mixer.music.stop()\r\n    pygame.mixer.stop()\r\n    pygame.display.set_caption('Победа!')\r\n\r\n    menu = load_image('assets/other_textures/game_menu.png')\r\n    victory_text = load_image('assets/other_textures/victory.png')\r\n    close_btn_coord = ((1110, 115), (1170, 180))\r\n\r\n    Button(420, 275, 'replay', 'replay')\r\n    Button(420, 425, 'return', 'open_pick_level_screen')\r\n    Button(420, 575, 'continue', 'next_level')\r\n\r\n    Sketch_button(550, 280, 'replay', 'Replay')\r\n    Sketch_button(550, 440, 'open_main_lobby', 'Back to lobby')\r\n    Sketch_button(550, 600, 'next_level', 'Next level')\r\n\r\n    play_sound(sounds['victory'])\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.KEYDOWN:\r\n                keys = pygame.key.get_pressed()\r\n                if keys[pygame.K_ESCAPE]:\r\n                    return\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    pos = event.pos\r\n                    if close_btn_coord[0][0] < pos[0] < close_btn_coord[1][0] \\\r\n                            and close_btn_coord[0][1] < pos[1] < close_btn_coord[1][1]:\r\n                        play_sound('button_click')\r\n                        play_background_music('assets/sounds/background_sounds/lobby/lobby_sound.mp3')\r\n                        groups['buttons'].empty()\r\n                        pick_level_screen()\r\n                    groups['buttons'].update(event)\r\n        groups['all_sprites'].draw(screen)\r\n        screen.blit(menu, (284, 97))\r\n        screen.blit(victory_text, (549, 100))\r\n        groups['buttons'].draw(screen)\r\n        for txt in Sketch_button.texts:\r\n            screen.blit(txt[0], txt[1])\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef lose_screen():\r\n    pygame.mixer.music.stop()\r\n    pygame.mixer.stop()\r\n    pygame.display.set_caption('Поражение...')\r\n\r\n    menu = load_image('assets/other_textures/game_menu.png')\r\n    defeat_text = load_image('assets/other_textures/defeat.png')\r\n    close_btn_coord = ((1110, 115), (1170, 180))\r\n\r\n    Button(420, 275, 'replay', 'replay')\r\n    Button(420, 425, 'return', 'open_pick_level_screen')\r\n\r\n    Sketch_button(550, 280, 'replay', 'Replay')\r\n    Sketch_button(550, 440, 'open_main_lobby', 'Back to lobby')\r\n\r\n    play_sound(sounds['defeat'])\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.KEYDOWN:\r\n                keys = pygame.key.get_pressed()\r\n                if keys[pygame.K_ESCAPE]:\r\n                    return\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 1:\r\n                    pos = event.pos\r\n                    if close_btn_coord[0][0] < pos[0] < close_btn_coord[1][0] \\\r\n                            and close_btn_coord[0][1] < pos[1] < close_btn_coord[1][1]:\r\n                        play_sound('button_click')\r\n                        play_background_music('assets/sounds/background_sounds/lobby/lobby_sound.mp3')\r\n                        groups['buttons'].empty()\r\n                        pick_level_screen()\r\n                    groups['buttons'].update(event)\r\n        groups['all_sprites'].draw(screen)\r\n        screen.blit(menu, (284, 97))\r\n        screen.blit(defeat_text, (549, 100))\r\n        groups['buttons'].draw(screen)\r\n        for txt in Sketch_button.texts:\r\n            screen.blit(txt[0], txt[1])\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef alpha_convert():\r\n    \"\"\"Конвертирует изображение в альфу\"\"\"\r\n    try:\r\n        for key, val in ANIMATIONS.items():\r\n            convert_val = {}\r\n            for key1 in val.keys():\r\n                try:\r\n                    convert_val[key1] = [frame.convert_alpha() for frame in val[key1] if\r\n                                         bool(frame.get_flags() & pygame.SRCALPHA)]\r\n                except pygame.error:\r\n                    print('Не удалось конвертируем в альфу')\r\n            ANIMATIONS[key] = convert_val\r\n    except Exception:\r\n        print('Ошибка изображения/структуры')\r\n\r\n\r\ndef step_sound_func():\r\n    \"\"\"Запускает звуки ходьбы\"\"\"\r\n    if not pygame.mixer.Channel(2).get_busy():\r\n        if len(groups['mobs']) > 0:\r\n            sound = choice([pygame.mixer.Sound('assets/sounds/entities_sounds/step.wav'),\r\n                            pygame.mixer.Sound('assets/sounds/entities_sounds/step1.wav')])\r\n            pygame.mixer.Channel(2).play(sound)\r\n            pygame.mixer.Channel(2).set_volume(0.1)\r\n    else:\r\n        if len(groups['mobs']) == 0:\r\n            pygame.mixer.Channel(2).stop()\r\n\r\n\r\ndef info_drawer(info_text, info_font, x, y, line_spacing):\r\n    \"\"\"Рисуем инфу по юниту\"\"\"\r\n    for line in info_text:\r\n        text_surface, text_rect = info_font.render(line, (100, 255, 100))\r\n        text_rect.x, text_rect.y = x, y\r\n        screen.blit(text_surface, text_rect)\r\n        y += text_rect.height + line_spacing\r\n\r\n\r\ndef system_info_drawer(money_font, hp_font):\r\n    \"\"\"Рисуем Монеты и Хп Игрока\"\"\"\r\n    text_surface, text_rect = money_font.render(f\"Деньги:{constant.cash}\", (100, 255, 100))  # Деньги\r\n    text_rect.x, text_rect.y = 10, 10\r\n    screen.blit(text_surface, text_rect)\r\n\r\n    text_surface, text_rect = hp_font.render(f\"Хп:{constant.hp}\", (100, 255, 100))  # Хп\r\n    text_rect.x, text_rect.y = 10, text_rect.height * 2\r\n    screen.blit(text_surface, text_rect)\r\n\r\n\r\ndef entity_drawer():\r\n    \"\"\"Рисуем динамические спрйты\"\"\"\r\n    groups['characters'].draw(screen)\r\n    groups['mobs'].draw(screen)\r\n    groups['shells'].draw(screen)\r\n    groups['shop_units'].draw(screen)\r\n    groups['drag_units'].draw(screen)\r\n    groups['animated_map_objects'].draw(screen)\r\n\r\n\r\ndef game_loop():\r\n    pygame.display.set_caption('Игра')\r\n    \"\"\"Основной игровой цикл\"\"\"\r\n    board = Board(6, 5, LEFT, TOP, 75)\r\n    shop_unit_coord = generate_level(load_level('map.txt'))\r\n    MapConstructor(20, 11, board, shop_unit_coord)\r\n    groups['map_tiles'].draw(screen)\r\n    groups['map_objects'].draw(screen)\r\n    reset_state()\r\n\r\n    wave_manager = WaveManager()\r\n    play_background_music('assets/sounds/background_sounds/lvl/Shiro_Sagisu_-_Treachery_72363454.mp3')\r\n    play_sound(sounds['game_start'])\r\n\r\n    static_background = pygame.Surface((WIDTH, HEIGHT))\r\n    static_background.blit(screen, (0, 0))\r\n\r\n    alpha_convert()\r\n\r\n    SPAWN_WAVE_EVENT = pygame.USEREVENT + 1\r\n    pygame.time.set_timer(SPAWN_WAVE_EVENT, 1500)\r\n\r\n    money_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=50)  # Деньги\r\n    info_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=20)  # Поле для информации об юните\r\n    hp_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=50)  # Деньги\r\n\r\n    info_text = ''\r\n    line_spacing = 10  # Расстояние между строками\r\n    x, y, coord_info_text = None, None, None\r\n\r\n    # Словарь для выбора юнита\r\n    unit_mapping = {\r\n        pygame.K_1: Archer,\r\n        pygame.K_2: Knight,\r\n        pygame.K_3: Wizard,\r\n        pygame.K_4: Priest,\r\n        pygame.K_5: ArmoredAxeman,\r\n        pygame.K_6: SwordsMan,\r\n        pygame.K_7: KnightTemplar\r\n    }\r\n\r\n    running = True\r\n    while running:\r\n        constant.frame_count += 1\r\n        keys = pygame.key.get_pressed()\r\n\r\n        if keys[pygame.K_LSHIFT]:\r\n            info_text, coord_info_text = show_unit_info(pygame.mouse.get_pos())\r\n            x, y = coord_info_text\r\n\r\n        if keys[pygame.K_e]:\r\n            board.spawn_mob(choice(\r\n                [Slime, Skeleton, Orc, ArmoredOrc, EliteOrc, RiderOrc, ArmoredSkeleton, GreateswordSkeleton,\r\n                 Werebear, Werewolf]))\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if event.button == 3:\r\n                    sale_unit(pygame.mouse.get_pos())\r\n                else:\r\n                    for key_code, unit_class in unit_mapping.items():\r\n                        if keys[key_code]:\r\n                            board.get_click(pygame.mouse.get_pos(), unit_class)\r\n                            break\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_ESCAPE:\r\n                    pause_screen()\r\n            if event.type == pygame.KEYUP:\r\n                if event.key == pygame.K_LSHIFT:\r\n                    info_text, coord_info_text = '', []\r\n            if event.type == SPAWN_WAVE_EVENT:\r\n                wave_manager.start_wave()\r\n\r\n        step_sound_func()\r\n\r\n        screen.blit(static_background, (0, 0))\r\n        entity_drawer()\r\n\r\n        wave_manager.spawn_enemy()\r\n\r\n        if info_text:\r\n            info_drawer(info_text, info_font, x, y, line_spacing)\r\n            x, y = coord_info_text\r\n\r\n        system_info_drawer(money_font, hp_font)\r\n\r\n        groups['all_sprites'].update()\r\n        pygame.display.flip()\r\n\r\n        if constant.hp <= 0:\r\n            lose_screen()\r\n\r\n        if wave_manager.check():\r\n            win_screen()\r\n        clock.tick(FPS)\r\n\r\n\r\nif __name__ == '__main__':\r\n    play_background_music('assets/sounds/background_sounds/lobby/lobby_sound.mp3')\r\n    main_lobby()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/screens.py b/screens.py
--- a/screens.py	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/screens.py	(date 1739873061848)
@@ -1,22 +1,20 @@
 import sys
 
 import pygame.sprite
+
+from Map_constructor import MapTile, AnimatedMapObject
 from load_image_func import load_image
-from sound_tests import play_background_music
+from sounds_manager import play_background_music
 from sprite_groups import update_group
-from Map_constructor import MapTile, AnimatedMapObject
-from shop import Shop
+# from Map_constructor import MapTile, AnimatedMapObject
+from shop_units import Shop
 
 from Units import *
 from Mobs import *
 
-from constant import LEFT, TOP, FPS, WIDTH, HEIGHT, reset_state
-from Map_constructor import MapConstructor, generate_level, load_level
+from constant import FPS, WIDTH, HEIGHT
 import pygame.freetype
-from Board_class import Board
-from sale_func import sale_unit
-from show_info import show_unit_info
-from Waves_spawner import WaveManager
+import Game
 
 pygame.init()
 
@@ -25,8 +23,8 @@
 
 clock = pygame.time.Clock()
 
-font = pygame.font.Font('assets/pi-sheng.regular.otf', 64)
-font2 = pygame.font.Font('assets/data/Adbnorm.ttf', 32)
+font = pygame.font.Font('assets/data/font/pi-sheng.regular.otf', 64)
+font2 = pygame.font.Font('assets/data/font/Adbnorm.ttf', 32)
 
 
 def terminate():
@@ -62,8 +60,8 @@
             if self.command == 'open_pick_level_screen':
                 pick_level_screen()
                 rulers_screen()
-                update_group()  # Временно
-                game_loop()  # Временно
+                update_group()
+                Game.game_loop()
             if self.command == 'open_main_lobby':
                 main_lobby()
             if self.command == 'quit':
@@ -77,9 +75,9 @@
             if self.command == 'open_mobs_page':
                 dictionary_screen(1, entity='Orc')
             if self.command == 'replay':
-                game_loop()
+                Game.game_loop()
             if self.command == 'next_level':
-                game_loop()
+                Game.game_loop()
 
 
 class Sketch_button(Button):
@@ -541,164 +539,6 @@
             screen.blit(txt[0], txt[1])
         pygame.display.flip()
         clock.tick(FPS)
-
-
-def alpha_convert():
-    """Конвертирует изображение в альфу"""
-    try:
-        for key, val in ANIMATIONS.items():
-            convert_val = {}
-            for key1 in val.keys():
-                try:
-                    convert_val[key1] = [frame.convert_alpha() for frame in val[key1] if
-                                         bool(frame.get_flags() & pygame.SRCALPHA)]
-                except pygame.error:
-                    print('Не удалось конвертируем в альфу')
-            ANIMATIONS[key] = convert_val
-    except Exception:
-        print('Ошибка изображения/структуры')
-
-
-def step_sound_func():
-    """Запускает звуки ходьбы"""
-    if not pygame.mixer.Channel(2).get_busy():
-        if len(groups['mobs']) > 0:
-            sound = choice([pygame.mixer.Sound('assets/sounds/entities_sounds/step.wav'),
-                            pygame.mixer.Sound('assets/sounds/entities_sounds/step1.wav')])
-            pygame.mixer.Channel(2).play(sound)
-            pygame.mixer.Channel(2).set_volume(0.1)
-    else:
-        if len(groups['mobs']) == 0:
-            pygame.mixer.Channel(2).stop()
-
-
-def info_drawer(info_text, info_font, x, y, line_spacing):
-    """Рисуем инфу по юниту"""
-    for line in info_text:
-        text_surface, text_rect = info_font.render(line, (100, 255, 100))
-        text_rect.x, text_rect.y = x, y
-        screen.blit(text_surface, text_rect)
-        y += text_rect.height + line_spacing
-
-
-def system_info_drawer(money_font, hp_font):
-    """Рисуем Монеты и Хп Игрока"""
-    text_surface, text_rect = money_font.render(f"Деньги:{constant.cash}", (100, 255, 100))  # Деньги
-    text_rect.x, text_rect.y = 10, 10
-    screen.blit(text_surface, text_rect)
-
-    text_surface, text_rect = hp_font.render(f"Хп:{constant.hp}", (100, 255, 100))  # Хп
-    text_rect.x, text_rect.y = 10, text_rect.height * 2
-    screen.blit(text_surface, text_rect)
-
-
-def entity_drawer():
-    """Рисуем динамические спрйты"""
-    groups['characters'].draw(screen)
-    groups['mobs'].draw(screen)
-    groups['shells'].draw(screen)
-    groups['shop_units'].draw(screen)
-    groups['drag_units'].draw(screen)
-    groups['animated_map_objects'].draw(screen)
-
-
-def game_loop():
-    pygame.display.set_caption('Игра')
-    """Основной игровой цикл"""
-    board = Board(6, 5, LEFT, TOP, 75)
-    shop_unit_coord = generate_level(load_level('map.txt'))
-    MapConstructor(20, 11, board, shop_unit_coord)
-    groups['map_tiles'].draw(screen)
-    groups['map_objects'].draw(screen)
-    reset_state()
-
-    wave_manager = WaveManager()
-    play_background_music('assets/sounds/background_sounds/lvl/Shiro_Sagisu_-_Treachery_72363454.mp3')
-    play_sound(sounds['game_start'])
-
-    static_background = pygame.Surface((WIDTH, HEIGHT))
-    static_background.blit(screen, (0, 0))
-
-    alpha_convert()
-
-    SPAWN_WAVE_EVENT = pygame.USEREVENT + 1
-    pygame.time.set_timer(SPAWN_WAVE_EVENT, 1500)
-
-    money_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=50)  # Деньги
-    info_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=20)  # Поле для информации об юните
-    hp_font = pygame.freetype.Font('assets/data/Adbnorm.ttf', size=50)  # Деньги
-
-    info_text = ''
-    line_spacing = 10  # Расстояние между строками
-    x, y, coord_info_text = None, None, None
-
-    # Словарь для выбора юнита
-    unit_mapping = {
-        pygame.K_1: Archer,
-        pygame.K_2: Knight,
-        pygame.K_3: Wizard,
-        pygame.K_4: Priest,
-        pygame.K_5: ArmoredAxeman,
-        pygame.K_6: SwordsMan,
-        pygame.K_7: KnightTemplar
-    }
-
-    running = True
-    while running:
-        constant.frame_count += 1
-        keys = pygame.key.get_pressed()
-
-        if keys[pygame.K_LSHIFT]:
-            info_text, coord_info_text = show_unit_info(pygame.mouse.get_pos())
-            x, y = coord_info_text
-
-        if keys[pygame.K_e]:
-            board.spawn_mob(choice(
-                [Slime, Skeleton, Orc, ArmoredOrc, EliteOrc, RiderOrc, ArmoredSkeleton, GreateswordSkeleton,
-                 Werebear, Werewolf]))
-
-        for event in pygame.event.get():
-            if event.type == pygame.QUIT:
-                terminate()
-            if event.type == pygame.MOUSEBUTTONDOWN:
-                if event.button == 3:
-                    sale_unit(pygame.mouse.get_pos())
-                else:
-                    for key_code, unit_class in unit_mapping.items():
-                        if keys[key_code]:
-                            board.get_click(pygame.mouse.get_pos(), unit_class)
-                            break
-            if event.type == pygame.KEYDOWN:
-                if event.key == pygame.K_ESCAPE:
-                    pause_screen()
-            if event.type == pygame.KEYUP:
-                if event.key == pygame.K_LSHIFT:
-                    info_text, coord_info_text = '', []
-            if event.type == SPAWN_WAVE_EVENT:
-                wave_manager.start_wave()
-
-        step_sound_func()
-
-        screen.blit(static_background, (0, 0))
-        entity_drawer()
-
-        wave_manager.spawn_enemy()
-
-        if info_text:
-            info_drawer(info_text, info_font, x, y, line_spacing)
-            x, y = coord_info_text
-
-        system_info_drawer(money_font, hp_font)
-
-        groups['all_sprites'].update()
-        pygame.display.flip()
-
-        if constant.hp <= 0:
-            lose_screen()
-
-        if wave_manager.check():
-            win_screen()
-        clock.tick(FPS)
 
 
 if __name__ == '__main__':
Index: Map_constructor.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from Units import Knight, Archer, Wizard, Priest, ArmoredAxeman, SwordsMan, KnightTemplar, Lancer\r\nfrom all_animations import ANIMATIONS\r\nfrom constant import CELL_SIZE, LEFT, WIDTH_CELL, TOP, HEIGHT_CELL\r\nfrom load_image_func import load_image\r\nfrom shop import Shop\r\nfrom sprite_groups import groups\r\n\r\nimport pygame\r\n\r\nused_tiles = {1: 'assets/map_tiles/Tiles/FieldsTile_38.png',\r\n              2: 'assets/map_tiles/Tiles/FieldsTile_31.png',\r\n              3: 'assets/map_tiles/Tiles/FieldsTile_40.png',\r\n              4: 'assets/map_tiles/Tiles/FieldsTile_43.png',\r\n              5: 'assets/map_tiles/Tiles/FieldsTile_44.png',\r\n              6: 'assets/map_tiles/Tiles/FieldsTile_47.png'}\r\n\r\n\r\ndef load_level(filename):\r\n    filename = \"assets/\" + filename\r\n    # читаем уровень, убирая символы перевода строки\r\n    with open(filename, 'r') as mapFile:\r\n        level_map = [line.strip() for line in mapFile]\r\n\r\n    # и подсчитываем максимальную длину\r\n    max_width = max(map(len, level_map))\r\n\r\n    # дополняем каждую строку пустыми клетками ('.')\r\n    return list(map(lambda x: x.ljust(max_width, '.'), level_map))\r\n\r\n\r\ndef generate_level(field):\r\n    coords = []\r\n    for y in range(len(field)):\r\n        for x in range(len(field[y])):\r\n            if field[y][x] == '.':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[1])\r\n            elif field[y][x] == '#':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[2])\r\n            elif field[y][x] == '=':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[3])\r\n            elif field[y][x] == '(':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[4])\r\n            elif field[y][x] == ')':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[5])\r\n            elif field[y][x] == '@':\r\n                MapTile(groups['map_tiles'], (x * CELL_SIZE, y * CELL_SIZE), image=used_tiles[6])\r\n                coords.append((x * CELL_SIZE + CELL_SIZE / 2, y * CELL_SIZE + CELL_SIZE / 2))\r\n    return coords\r\n\r\n\r\nclass MapConstructor:\r\n    def __init__(self, map_width, map_height, board, shop_unit_coord):\r\n        self.map_width = map_width\r\n        self.map_height = map_height\r\n        self.board = board\r\n\r\n        generate_level(load_level('map.txt'))\r\n\r\n        MapTile(groups['map_objects'], (145, 300), 'assets/map_tiles/Objects/camp/1.png')\r\n        MapTile(groups['map_objects'], (10, 250), 'assets/map_tiles/Objects/camp/1.png', reverse=True)\r\n        MapTile(groups['map_objects'], (10, 550), 'assets/map_tiles/Objects/camp/3.png', reverse=True)\r\n\r\n        MapTile(groups['map_objects'], (175, 425), 'assets/map_tiles/Objects/decor/Log2.png')\r\n        MapTile(groups['map_objects'], (75, 500), 'assets/map_tiles/Objects/decor/Log3.png')\r\n\r\n        MapTile(groups['map_objects'], (15, 455), 'assets/map_tiles/Objects/decor/Box1.png')\r\n\r\n        MapTile(groups['map_objects'], (40, 333), 'assets/map_tiles/Objects/decor/Box1.png')\r\n        MapTile(groups['map_objects'], (13, 335), 'assets/map_tiles/Objects/decor/Box1.png')\r\n        MapTile(groups['map_objects'], (26, 313), 'assets/map_tiles/Objects/decor/Box1.png')\r\n\r\n        MapTile(groups['map_objects'], (221, 566), 'assets/map_tiles/Objects/fences/8.png', reverse=True)\r\n        MapTile(groups['map_objects'], (191, 589), 'assets/map_tiles/Objects/fences/8.png', reverse=True)\r\n        MapTile(groups['map_objects'], (161, 612), 'assets/map_tiles/Objects/fences/8.png', reverse=True)\r\n        MapTile(groups['map_objects'], (0, 630), 'assets/map_tiles/Objects/fences/1.png')\r\n        MapTile(groups['map_objects'], (54, 630), 'assets/map_tiles/Objects/fences/1.png')\r\n        MapTile(groups['map_objects'], (108, 630), 'assets/map_tiles/Objects/fences/1.png')\r\n\r\n        MapTile(groups['map_objects'], (0, 220), 'assets/map_tiles/Objects/fences/1.png')\r\n        MapTile(groups['map_objects'], (54, 220), 'assets/map_tiles/Objects/fences/1.png')\r\n        MapTile(groups['map_objects'], (108, 220), 'assets/map_tiles/Objects/fences/1.png')\r\n        MapTile(groups['map_objects'], (161, 220), 'assets/map_tiles/Objects/fences/8.png')\r\n        MapTile(groups['map_objects'], (191, 242), 'assets/map_tiles/Objects/fences/8.png')\r\n        MapTile(groups['map_objects'], (221, 264), 'assets/map_tiles/Objects/fences/8.png')\r\n\r\n        MapTile(groups['map_objects'], (540, 150), 'assets/map_tiles/Objects/shadows/5.png')\r\n        MapTile(groups['map_objects'], (765, 150), 'assets/map_tiles/Objects/shadows/5.png')\r\n        MapTile(groups['map_objects'], (990, 150), 'assets/map_tiles/Objects/shadows/5.png')\r\n        MapTile(groups['map_objects'], (1215, 150), 'assets/map_tiles/Objects/shadows/5.png')\r\n\r\n        MapTile(groups['map_objects'], (525, 55), 'assets/map_tiles/Objects/decor/Tree1.png')\r\n        MapTile(groups['map_objects'], (750, 55), 'assets/map_tiles/Objects/decor/Tree1.png')\r\n        MapTile(groups['map_objects'], (975, 55), 'assets/map_tiles/Objects/decor/Tree1.png')\r\n        MapTile(groups['map_objects'], (1200, 55), 'assets/map_tiles/Objects/decor/Tree1.png')\r\n\r\n        MapTile(groups['map_objects'], (440, 680), 'assets/map_tiles/Objects/pointers/1.png')\r\n        MapTile(groups['map_objects'], (1350, 215), 'assets/map_tiles/Objects/pointers/4.png')\r\n\r\n        MapTile(groups['map_objects'], (1142, 725), 'assets/map_tiles/Objects/bushes/1.png')\r\n        MapTile(groups['map_objects'], (345, 113), 'assets/map_tiles/Objects/bushes/1.png')\r\n        MapTile(groups['map_objects'], (1335, 35), 'assets/map_tiles/Objects/bushes/1.png')\r\n        MapTile(groups['map_objects'], (180, 80), 'assets/map_tiles/Objects/bushes/2.png')\r\n        MapTile(groups['map_objects'], (560, 670), 'assets/map_tiles/Objects/bushes/2.png')\r\n        MapTile(groups['map_objects'], (615, 250), 'assets/map_tiles/Objects/bushes/2.png')\r\n        MapTile(groups['map_objects'], (25, 115), 'assets/map_tiles/Objects/bushes/3.png')\r\n        MapTile(groups['map_objects'], (1100, 740), 'assets/map_tiles/Objects/bushes/3.png')\r\n        MapTile(groups['map_objects'], (415, 725), 'assets/map_tiles/Objects/bushes/3.png')\r\n        MapTile(groups['map_objects'], (780, 735), 'assets/map_tiles/Objects/bushes/4.png')\r\n        MapTile(groups['map_objects'], (425, 245), 'assets/map_tiles/Objects/bushes/4.png')\r\n        MapTile(groups['map_objects'], (170, 670), 'assets/map_tiles/Objects/bushes/4.png', reverse=True)\r\n        MapTile(groups['map_objects'], (75, 725), 'assets/map_tiles/Objects/bushes/5.png')\r\n        MapTile(groups['map_objects'], (1400, 665), 'assets/map_tiles/Objects/bushes/5.png')\r\n        MapTile(groups['map_objects'], (75, 45), 'assets/map_tiles/Objects/bushes/5.png')\r\n        MapTile(groups['map_objects'], (1400, 150), 'assets/map_tiles/Objects/bushes/6.png')\r\n        MapTile(groups['map_objects'], (610, 690), 'assets/map_tiles/Objects/bushes/6.png')\r\n        MapTile(groups['map_objects'], (225, 145), 'assets/map_tiles/Objects/bushes/6.png')\r\n\r\n        MapTile(groups['map_objects'], (250, 125), 'assets/map_tiles/Objects/stones/1.png')\r\n        MapTile(groups['map_objects'], (165, 270), 'assets/map_tiles/Objects/stones/2.png')\r\n        MapTile(groups['map_objects'], (65, 185), 'assets/map_tiles/Objects/stones/3.png')\r\n        MapTile(groups['map_objects'], (250, 700), 'assets/map_tiles/Objects/stones/7.png')\r\n        MapTile(groups['map_objects'], (15, 780), 'assets/map_tiles/Objects/stones/9.png')\r\n        MapTile(groups['map_objects'], (1395, 85), 'assets/map_tiles/Objects/stones/10.png')\r\n        MapTile(groups['map_objects'], (900, 685), 'assets/map_tiles/Objects/stones/11.png')\r\n        MapTile(groups['map_objects'], (1365, 765), 'assets/map_tiles/Objects/stones/12.png')\r\n        MapTile(groups['map_objects'], (135, 145), 'assets/map_tiles/Objects/stones/16.png')\r\n\r\n        # Создаем анимированные объекты\r\n\r\n        AnimatedMapObject(groups['animated_map_objects'], (70, 400),\r\n                          ('assets/map_tiles/Animated_Objects/campfire/active_campfire/1.png',\r\n                           'assets/map_tiles/Animated_Objects/campfire/active_campfire/2.png',\r\n                           'assets/map_tiles/Animated_Objects/campfire/active_campfire/3.png',\r\n                           'assets/map_tiles/Animated_Objects/campfire/active_campfire/4.png',\r\n                           'assets/map_tiles/Animated_Objects/campfire/active_campfire/5.png',\r\n                           'assets/map_tiles/Animated_Objects/campfire/active_campfire/6.png',))\r\n\r\n        AnimatedMapObject(groups['animated_map_objects'], (245, 500),\r\n                          ('assets/map_tiles/Animated_Objects/flag/1.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/2.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/3.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/4.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/5.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/6.png'), True)\r\n        AnimatedMapObject(groups['animated_map_objects'], (245, 200),\r\n                          ('assets/map_tiles/Animated_Objects/flag/1.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/2.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/3.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/4.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/5.png',\r\n                           'assets/map_tiles/Animated_Objects/flag/6.png'), True)\r\n\r\n        # Рисуем клетки\r\n        for i in range(HEIGHT_CELL):\r\n            for j in range(WIDTH_CELL):\r\n                x = LEFT + j * CELL_SIZE\r\n                y = TOP + i * CELL_SIZE\r\n                MapTile(groups['map_tiles'], [x, y], 'assets/map_tiles/Tiles/FieldsTile_47.png')\r\n\r\n        # Ставим конницу\r\n        for i in range(1, WIDTH_CELL):\r\n            Lancer((LEFT - CELL_SIZE / 2, i * CELL_SIZE + TOP - CELL_SIZE / 2), group_of_row=groups['rows'][i - 1])\r\n\r\n        # Ставим юнитов в магазин\r\n        units = [(Knight, shop_unit_coord[0], ANIMATIONS['KNIGHT'], 90, 45),\r\n                 (Archer, shop_unit_coord[1], ANIMATIONS['ARCHER'], 50, 25),\r\n                 (Wizard, shop_unit_coord[2], ANIMATIONS['WIZARD'], 85, 42),\r\n                 (Priest, shop_unit_coord[3], ANIMATIONS['PRIEST'], 80, 40),\r\n                 (ArmoredAxeman, shop_unit_coord[4], ANIMATIONS['ARMORED_AXEMAN'], 70, 35),\r\n                 (SwordsMan, shop_unit_coord[5], ANIMATIONS['SWORDSMAN'], 80, 40),\r\n                 (KnightTemplar, shop_unit_coord[6], ANIMATIONS['KNIGHT_TEMPLAR'], 100, 40)]\r\n\r\n        for unit, coord, anim, price, sale in units:\r\n            Shop(unit, coord, anim, board,\r\n                 price=price, sale=sale)\r\n\r\n\r\nclass MapTile(pygame.sprite.Sprite):\r\n    def __init__(self, group, coord, image, reverse=False):\r\n        super().__init__(group, groups['all_sprites'])\r\n        self.image = load_image(file=image, reverse=reverse)\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = coord[0]\r\n        self.rect.y = coord[1]\r\n\r\n\r\nclass AnimatedMapObject(pygame.sprite.Sprite):\r\n    def __init__(self, group, coord, images, reverse=False, scale=None):\r\n        super().__init__(group, groups['all_sprites'])\r\n        self.image = load_image(images[0])\r\n        self.frames = [load_image(file=image, reverse=reverse, scale=scale) for image in images]\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = coord[0]\r\n        self.rect.y = coord[1]\r\n\r\n        self.frame = 0  # текущий кадр\r\n        self.last_update = pygame.time.get_ticks()\r\n        self.frame_rate = 150  # как быстро кадры меняются\r\n\r\n    def update(self, *args, **kwargs):\r\n        now = pygame.time.get_ticks()\r\n        if now - self.last_update > self.frame_rate:\r\n            self.last_update = now\r\n            self.frame = (self.frame + 1) % len(self.frames)\r\n            self.image = self.frames[self.frame]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Map_constructor.py b/Map_constructor.py
--- a/Map_constructor.py	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/Map_constructor.py	(date 1739873005300)
@@ -2,7 +2,7 @@
 from all_animations import ANIMATIONS
 from constant import CELL_SIZE, LEFT, WIDTH_CELL, TOP, HEIGHT_CELL
 from load_image_func import load_image
-from shop import Shop
+from shop_units import Shop
 from sprite_groups import groups
 
 import pygame
Index: constant.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>CELL_SIZE = 75\r\nFPS = 30\r\nWIDTH_CELL = 6\r\nHEIGHT_CELL = 5\r\n\r\nTOP = 75 * 4\r\nLEFT = 75 * 6\r\n\r\nWIDTH, HEIGHT = 1500, 825\r\n\r\nGAME_MODE = 'GAME'\r\n\r\nCURRENT_LVL = 'lvl1'\r\n\r\n# Настройки уровней\r\nLVL_PARAMS = {\r\n    'lvl1': {\r\n        'dark_filter': False\r\n    },\r\n    'lvl2': {\r\n        'dark_filter': True\r\n    }\r\n}\r\n\r\nWAVES = {\r\n    'lvl1': [\r\n        {'enemies': [\r\n            ('Orc', 2),\r\n            ('Skeleton', 2),\r\n            ('Slime', 1)\r\n        ],\r\n            'interval': 4000},\r\n        {'enemies': [\r\n            ('EliteOrc', 1),\r\n            ('RiderOrc', 1),\r\n            ('ArmoredOrc', 1),\r\n            ('GreateswordSkeleton', 1),\r\n            ('ArmoredSkeleton', 1)\r\n        ],\r\n            'interval': 4000},\r\n        {'enemies': [\r\n            ('Werebear', 1),\r\n            ('Werewolf', 1)\r\n        ],\r\n            'interval': 4000}\r\n    ],\r\n    'lvl2': [\r\n        {'enemies': [\r\n            ('Orc', 5),\r\n            ('Skeleton', 4),\r\n            ('Slime', 2)\r\n        ],\r\n            'interval': 2000},\r\n        {'enemies': [\r\n            ('Orc', 6),\r\n            ('Skeleton', 5),\r\n            ('EliteOrc', 2),\r\n            ('RiderOrc', 2),\r\n            ('Slime', 3)\r\n        ],\r\n            'interval': 2500},\r\n        {'enemies': [\r\n            ('Orc', 6),\r\n            ('Skeleton', 6),\r\n            ('EliteOrc', 2),\r\n            ('RiderOrc', 3),\r\n            ('ArmoredOrc', 3),\r\n            ('Slime', 3)\r\n        ],\r\n            'interval': 3000},\r\n        {'enemies': [\r\n            ('Orc', 6),\r\n            ('Skeleton', 6),\r\n            ('EliteOrc', 2),\r\n            ('RiderOrc', 3),\r\n            ('ArmoredOrc', 3),\r\n            ('Werebear', 2),\r\n            ('Werewolf', 2),\r\n            ('Slime', 4)\r\n        ],\r\n            'interval': 3000},\r\n        {'enemies': [\r\n            ('Orc', 6),\r\n            ('Skeleton', 6),\r\n            ('EliteOrc', 2),\r\n            ('RiderOrc', 3),\r\n            ('ArmoredOrc', 3),\r\n            ('Werebear', 2),\r\n            ('Werewolf', 2),\r\n            ('GreateswordSkeleton', 2),\r\n        ],\r\n            'interval': 2500},\r\n        {'enemies': [\r\n            ('Orc', 8),\r\n            ('Skeleton', 8),\r\n            ('EliteOrc', 3),\r\n            ('RiderOrc', 4),\r\n            ('ArmoredOrc', 4),\r\n            ('Werebear', 3),\r\n            ('Werewolf', 3),\r\n            ('GreateswordSkeleton', 3),\r\n            ('ArmoredSkeleton', 3),\r\n            ('Slime', 5)\r\n        ],\r\n            'interval': 3500}]\r\n}\r\n\r\nframe_count = 0\r\ncash = 250\r\nhp = 1\r\n\r\n\r\n\r\ndef reset_state():\r\n    \"\"\"Сбрасываем параметры.\"\"\"\r\n    global frame_count, cash, hp\r\n    frame_count = 0\r\n    cash = 250\r\n    hp = 1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/constant.py b/constant.py
--- a/constant.py	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/constant.py	(date 1739872252149)
@@ -107,7 +107,7 @@
 
 frame_count = 0
 cash = 250
-hp = 1
+hp = 5
 
 
 
@@ -116,4 +116,4 @@
     global frame_count, cash, hp
     frame_count = 0
     cash = 250
-    hp = 1
+    hp = 5
Index: Board.py
===================================================================
diff --git a/Board.py b/Board.py
deleted file mode 100644
--- a/Board.py	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ /dev/null	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
@@ -1,55 +0,0 @@
-from constant import WIDTH
-from sprite_groups import groups
-from random import randrange
-
-
-class Board:
-    def __init__(self, cell_size, coord):
-        """Доска для юнитов."""
-        self.cell_size = cell_size
-        self.coord = coord
-        self.width, self.height = len(set(x for x, y in self.coord)), len(set(y for x, y in self.coord))
-        self.left, self.top = min(self.coord)
-
-    def get_click(self, mouse_pos, entity):
-        """Обрабатываем клик."""
-        cell = self.get_cell(mouse_pos)
-        return self.on_click(cell=cell, entity=entity)
-
-    def get_cell(self, mouse_pos):
-        """Проверка координат."""
-        x, y = mouse_pos
-        i = (y - self.top) // self.cell_size
-        j = (x - self.left) // self.cell_size
-        if 0 <= i < self.height and 0 <= j < self.width:
-            return j, i
-        else:
-            return None
-
-    def on_click(self, entity, cell=None):
-        """Спавн юнита/моба."""
-        try:
-            # Если клетка занята, то вызываем ошибку
-            units_coord = tuple(map(lambda s: ((s.rect.centerx - self.left) // self.cell_size,
-                                               (s.rect.centery - self.top) // self.cell_size),
-                                    groups["characters"]))
-            if any(map(lambda coord: coord == cell, units_coord)):
-                return False
-
-            # Иначе спавним юнита и возвращаем True
-            setting = ((cell[0] * self.cell_size + self.left + self.cell_size / 2,
-                        cell[1] * self.cell_size + self.top + self.cell_size / 2),
-                       groups['rows'][cell[1]])
-            entity(*setting)
-            return True
-        except Exception:
-            return False
-
-    def spawn_mob(self, entity):
-        """Спавн мобов."""
-        try:
-            row = randrange(0, self.height)
-            setting = ((WIDTH, row * self.cell_size + self.top + self.cell_size / 2), groups['rows'][row])
-            entity(*setting)
-        except Exception:
-            pass
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"68cba61a-d91e-4579-afba-f3da8e9d2941\" name=\"Changes\" comment=\"продолжил работу со звуком\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Board_class.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Board_class.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Map_constructor.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Map_constructor.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Mobs.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Mobs.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Units.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Units.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Waves_spawner.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Waves_spawner.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death0.wav\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death1.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death2.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death3.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death4.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar2.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar3.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar4.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar5.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/skeleton-breathing.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/skeleton-breathing2.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Wolf/hurt.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/Wolf/roar.mp3\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assets/sounds/entities_sounds/step2.wav\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/constant.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/constant.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/demo_project.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/demo_project.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/sale_func.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sale_func.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/screens.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/screens.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/shop.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/shop.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/show_info.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/show_info.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/sound_tests.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sound_tests.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/sprite_groups.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sprite_groups.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Kirill's-Branch\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;kirden-2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/LySenoK-ofc/PyGame-Project.git&quot;,\r\n    &quot;accountId&quot;: &quot;062553e0-878f-4ef5-aa57-5470210fde43&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2r9ucWvParUJW42iLgAzJHYD3Ql\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.Map_constructor.executor\": \"Run\",\r\n    \"Python.demo_map.executor\": \"Run\",\r\n    \"Python.demo_project.executor\": \"Run\",\r\n    \"Python.screens.executor\": \"Debug\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"Kirill's-Branch\",\r\n    \"last_opened_file_path\": \"E:/PyCharmProjects/YandexGameProject/assets/data\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\assets\\data\" />\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\data\" />\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\assets\\animations\\Mobs\\werewolf\" />\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\assets\\animations\\Mobs\\werebear\" />\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\assets\\animations\\Mobs\\slime\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\PyCharmProjects\\YandexGameProject\\assets\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.demo_project\">\r\n    <configuration name=\"Map_constructor\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"PyGame_Project_demo\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Map_constructor.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"demo_map\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"PyGame_Project_demo\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/demo_map.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"demo_project\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"PyGame_Project_demo\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/demo_project.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"screens\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"PyGame_Project_demo\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/screens.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.demo_project\" />\r\n        <item itemvalue=\"Python.screens\" />\r\n        <item itemvalue=\"Python.demo_map\" />\r\n        <item itemvalue=\"Python.Map_constructor\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-495700d161d3-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.22562.220\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"68cba61a-d91e-4579-afba-f3da8e9d2941\" name=\"Changes\" comment=\"\" />\r\n      <created>1735983691855</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1735983691855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Добавил рыцаря\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1737639897285</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1737639897285</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Лениво совместил лобби и игру. На тебе сделать это нормально, а также почисти код в screens.py.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738436426337</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738436426337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Добавил несколько юнитов, над доделать\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738675907581</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738675907581</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Новые мобы, броня\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738775330514</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738775330514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"немного изменил код\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738849716595</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738849716595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Поделал механик\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1738955757275</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1738955757275</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Волны мобов. Возможность покупать юнитов.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739050154561</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739050154561</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"добавил звуков\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739283239150</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739283239150</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"продолжил работу со звуком\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1739369044218</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1739369044218</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Добавил рыцаря\" />\r\n    <MESSAGE value=\"Лениво совместил лобби и игру. На тебе сделать это нормально, а также почисти код в screens.py.\" />\r\n    <MESSAGE value=\"Добавил несколько юнитов, над доделать\" />\r\n    <MESSAGE value=\"Новые мобы, броня\" />\r\n    <MESSAGE value=\"немного изменил код\" />\r\n    <MESSAGE value=\"Поделал механик\" />\r\n    <MESSAGE value=\"Волны мобов. Возможность покупать юнитов.\" />\r\n    <MESSAGE value=\"добавил звуков\" />\r\n    <MESSAGE value=\"продолжил работу со звуком\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"продолжил работу со звуком\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Board_class.py</url>\r\n          <line>42</line>\r\n          <option name=\"timeStamp\" value=\"15\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/.idea/workspace.xml	(date 1739873188391)
@@ -4,36 +4,18 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="68cba61a-d91e-4579-afba-f3da8e9d2941" name="Changes" comment="продолжил работу со звуком">
+    <list default="true" id="68cba61a-d91e-4579-afba-f3da8e9d2941" name="Changes" comment="Доделал звук. Улучшил код в целом.">
+      <change beforePath="$PROJECT_DIR$/.idea/PyGame_Project_demo.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/PyGame_Project_demo.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Board_class.py" beforeDir="false" afterPath="$PROJECT_DIR$/Board_class.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Board.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Game.py" beforeDir="false" afterPath="$PROJECT_DIR$/Game.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Map_constructor.py" beforeDir="false" afterPath="$PROJECT_DIR$/Map_constructor.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Mobs.py" beforeDir="false" afterPath="$PROJECT_DIR$/Mobs.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Units.py" beforeDir="false" afterPath="$PROJECT_DIR$/Units.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Waves_spawner.py" beforeDir="false" afterPath="$PROJECT_DIR$/Waves_spawner.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death0.wav" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death1.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death2.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death3.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/death4.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar2.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar3.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar4.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/roar5.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/skeleton-breathing.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Orc/skeleton-breathing2.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Wolf/hurt.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/Wolf/roar.mp3" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/assets/sounds/entities_sounds/step2.wav" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Waves_manager.py" beforeDir="false" afterPath="$PROJECT_DIR$/Waves_manager.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/all_animations.py" beforeDir="false" afterPath="$PROJECT_DIR$/all_animations.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/assets/pi-sheng.regular.otf" beforeDir="false" afterPath="$PROJECT_DIR$/assets/data/font/pi-sheng.regular.otf" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/constant.py" beforeDir="false" afterPath="$PROJECT_DIR$/constant.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/demo_project.py" beforeDir="false" afterPath="$PROJECT_DIR$/demo_project.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sale_func.py" beforeDir="false" afterPath="$PROJECT_DIR$/sale_func.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/screens.py" beforeDir="false" afterPath="$PROJECT_DIR$/screens.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/shop.py" beforeDir="false" afterPath="$PROJECT_DIR$/shop.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/show_info.py" beforeDir="false" afterPath="$PROJECT_DIR$/show_info.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sound_tests.py" beforeDir="false" afterPath="$PROJECT_DIR$/sound_tests.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sprite_groups.py" beforeDir="false" afterPath="$PROJECT_DIR$/sprite_groups.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -81,12 +63,12 @@
     "Python.Map_constructor.executor": "Run",
     "Python.demo_map.executor": "Run",
     "Python.demo_project.executor": "Run",
-    "Python.screens.executor": "Debug",
+    "Python.screens.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "Kirill's-Branch",
-    "last_opened_file_path": "E:/PyCharmProjects/YandexGameProject/assets/data",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "E:/PyCharmProjects/YandexGameProjectLocal",
     "settings.editor.selected.configurable": "preferences.lookFeel"
   }
 }]]></component>
@@ -102,7 +84,29 @@
       <recent name="E:\PyCharmProjects\YandexGameProject\assets" />
     </key>
   </component>
-  <component name="RunManager" selected="Python.demo_project">
+  <component name="RunManager" selected="Python.screens">
+    <configuration name="Game" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+      <module name="PyGame_Project_demo" />
+      <option name="ENV_FILES" value="" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Game.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
     <configuration name="Map_constructor" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
       <module name="PyGame_Project_demo" />
       <option name="ENV_FILES" value="" />
@@ -191,10 +195,18 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Python.demo_project" />
+    <list>
+      <item itemvalue="Python.Game" />
+      <item itemvalue="Python.Map_constructor" />
+      <item itemvalue="Python.demo_map" />
+      <item itemvalue="Python.demo_project" />
+      <item itemvalue="Python.screens" />
+    </list>
+    <recent_temporary>
+      <list>
         <item itemvalue="Python.screens" />
+        <item itemvalue="Python.Game" />
+        <item itemvalue="Python.demo_project" />
         <item itemvalue="Python.demo_map" />
         <item itemvalue="Python.Map_constructor" />
       </list>
@@ -330,9 +342,9 @@
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-          <url>file://$PROJECT_DIR$/Board_class.py</url>
-          <line>42</line>
-          <option name="timeStamp" value="15" />
+          <url>file://$PROJECT_DIR$/map_creator.py</url>
+          <line>29</line>
+          <option name="timeStamp" value="19" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
Index: .idea/PyGame_Project_demo.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.11 (PyGame-Project)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/PyGame_Project_demo.iml b/.idea/PyGame_Project_demo.iml
--- a/.idea/PyGame_Project_demo.iml	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/.idea/PyGame_Project_demo.iml	(date 1739872252623)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.11 (PyGame-Project)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.13" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.11 (PyGame_Project_demo)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.11 (PyGame-Project)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 897a7a483b7d9ad682ea16f64e3ce309ec5f507f)
+++ b/.idea/misc.xml	(date 1739872252640)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.11 (PyGame_Project_demo)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (PyGame-Project)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
