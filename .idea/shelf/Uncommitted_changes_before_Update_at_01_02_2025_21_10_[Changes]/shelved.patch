Index: demo_project.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import constant\r\nfrom Map_constructor import MapConstructor\r\nfrom Units import Archer, Knight, Wizard, Priest\r\nfrom constant import LEFT, TOP, FPS, WIDTH, HEIGHT\r\nfrom Board_class import Board\r\nfrom sprite_groups import *\r\nimport pygame\r\nfrom all_animations import ANIMATIONS\r\nimport time\r\n\r\npygame.init()\r\nsize = WIDTH, HEIGHT\r\nscreen = pygame.display.set_mode(size)\r\nbackground = pygame.Surface((WIDTH, HEIGHT))\r\n\r\nif __name__ == '__main__':\r\n    pygame.display.set_caption('demo_project')\r\n\r\n    board = Board(6, 5, LEFT, TOP, 75)\r\n    MapConstructor(20, 11, board)\r\n\r\n    # # Конвертируем в альфу\r\n    try:\r\n        for key, val in ANIMATIONS.items():\r\n            convert_val = {}\r\n            for key1 in val.keys():\r\n                try:\r\n                    convert_val[key1] = [frame.convert_alpha() for frame in val[key1] if\r\n                                         bool(frame.get_flags() & pygame.SRCALPHA)]\r\n                except pygame.error:\r\n                    print('Не удалось конвертируем в альфу')\r\n            ANIMATIONS[key] = convert_val\r\n    except Exception:\r\n        print('Ошибка изображения/структуры')\r\n\r\n    clock = pygame.time.Clock()\r\n\r\n    running = True\r\n    while running:\r\n\r\n        start_time = time.time()\r\n\r\n        constant.frame_count += 1\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n\r\n            if event.type == pygame.MOUSEBUTTONDOWN:\r\n                if pygame.key.get_pressed()[pygame.K_1]:\r\n                    board.get_click(pygame.mouse.get_pos(), Archer)\r\n                elif pygame.key.get_pressed()[pygame.K_2]:\r\n                    board.get_click(pygame.mouse.get_pos(), Knight)\r\n                elif pygame.key.get_pressed()[pygame.K_3]:\r\n                    board.get_click(pygame.mouse.get_pos(), Wizard)\r\n                elif pygame.key.get_pressed()[pygame.K_4]:\r\n                    board.get_click(pygame.mouse.get_pos(), Priest)\r\n\r\n            if event.type == pygame.KEYDOWN:\r\n                keys = pygame.key.get_pressed()\r\n                if keys[pygame.K_e]:\r\n                    board.on_click()\r\n                if keys[pygame.K_p]:\r\n                    print(\r\n                        f'map_tiles:{map_tiles},\\ncharacters:{characters},\\nshells:{shells},\\nmobs:{mobs},\\nmoneys:{moneys},\\nmap_objects:{map_objects},\\nanimated_map_objects:{animated_map_objects}\\n')\r\n\r\n        all_sprites.update()\r\n\r\n        all_sprites.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n        end_time = time.time()\r\n        execution_time = end_time - start_time\r\n        print(f\"{execution_time} секунд\", constant.frame_count)\r\n\r\n    pygame.quit()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/demo_project.py b/demo_project.py
--- a/demo_project.py	(revision d9edd9722c91ff5923ebc17b77e8d28cdaee7f34)
+++ b/demo_project.py	(date 1738433369877)
@@ -19,7 +19,7 @@
     board = Board(6, 5, LEFT, TOP, 75)
     MapConstructor(20, 11, board)
 
-    # # Конвертируем в альфу
+    # Конвертируем в альфу
     try:
         for key, val in ANIMATIONS.items():
             convert_val = {}
@@ -64,7 +64,6 @@
                         f'map_tiles:{map_tiles},\ncharacters:{characters},\nshells:{shells},\nmobs:{mobs},\nmoneys:{moneys},\nmap_objects:{map_objects},\nanimated_map_objects:{animated_map_objects}\n')
 
         all_sprites.update()
-
         all_sprites.draw(screen)
 
         pygame.display.flip()
